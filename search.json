[{"path":"https://martinlaw.github.io/abscessus/articles/Abscessus_analysis.html","id":"load-packages-load-anonymised-data-tidy-data","dir":"Articles","previous_headings":"","what":"Load packages, load anonymised data, tidy data","title":"Abscessus_analysis","text":"","code":"library(librarian) librarian::shelf(survival, survminer,martinlaw/abscessus)  dat <- read.csv(\"../data/abscessus_data.csv\")  # Create more informative variables: dat$infected <- ifelse(test=dat$abscessuss_yes_1, yes=\"Infected\", no=\"Not infected\") dat$alive <- ifelse(test=dat$alive_yes_1, yes=\"Alive\", no=\"Not alive\") dat$lung.dysfun <- ifelse(test=dat$CLAD_yes_1, yes=\"Yes\", no=\"No\") dat$airway.injury <- ifelse(test=dat$airway_injury_yes_1, yes=\"Injury\", no=\"No Injury\")  names(dat)[names(dat)==\"survival_post_tx\"] <- \"time\" dat$status <- -1*(dat$alive_yes_1-1)"},{"path":[]},{"path":"https://martinlaw.github.io/abscessus/articles/Abscessus_analysis.html","id":"binary","dir":"Articles","previous_headings":"Difference in mortality","what":"Binary","title":"Abscessus_analysis","text":"Begin 2x2 table: Treating survival binary: difference groups using Fisher’s Exact Test:","code":"con <- table(dat$infected, dat$alive) con #>                #>                Alive Not alive #>   Infected         7         2 #>   Not infected    43        16 fisher.test(con)  #>  #>  Fisher's Exact Test for Count Data #>  #> data:  con #> p-value = 1 #> alternative hypothesis: true odds ratio is not equal to 1 #> 95 percent confidence interval: #>   0.2147327 14.0893634 #> sample estimates: #> odds ratio  #>   1.297558"},{"path":[]},{"path":"https://martinlaw.github.io/abscessus/articles/Abscessus_analysis.html","id":"plot","dir":"Articles","previous_headings":"Difference in mortality > Survival analysis","what":"Plot","title":"Abscessus_analysis","text":"","code":"fit <- survfit(Surv(time, status) ~ infected, data = dat) #ggsurvplot(fit, data=dat) saved_theme <- theme_minimal() + theme(axis.text = element_text(size = 10)) logrank.plot <- ggsurvplot(    fit,                     # survfit object with calculated statistics.    data = dat,              # data used to fit survival curves.     risk.table = TRUE,       # show risk table.    pval = TRUE,             # show p-value of log-rank test.    conf.int = FALSE,         # show confidence intervals for                              # point estimates of survival curves.    #xlim = c(0,2000),        # present narrower X axis, but not affect                             # survival estimates.    #break.time.by = 500,     # break X axis in time intervals by 500.    ggtheme = saved_theme, # customize plot and risk table with a theme.  risk.table.y.text.col = T, # colour risk table text annotations.   risk.table.y.text = FALSE, # show bars instead of names in text annotations                             # in legend of risk table  title=\"Kaplan-Meier survival curves\", ) logrank.plot png(filename=\"../figs/logrank_plot.png\", width=8, height=6, units=\"in\", res=300) logrank.plot dev.off() #> agg_png  #>       2"},{"path":"https://martinlaw.github.io/abscessus/articles/Abscessus_analysis.html","id":"log-rank-test","dir":"Articles","previous_headings":"Difference in mortality > Survival analysis","what":"Log-rank test","title":"Abscessus_analysis","text":"log-rank test finds difference survival times two groups, appropriate model assume proportional hazards.","code":"fit.diff <- survdiff(formula(fit), data=dat) fit.diff #> Call: #> survdiff(formula = formula(fit), data = dat) #>  #>                        N Observed Expected (O-E)^2/E (O-E)^2/V #> infected=Infected      9        2     2.48    0.0937     0.109 #> infected=Not infected 59       16    15.52    0.0150     0.109 #>  #>  Chisq= 0.1  on 1 degrees of freedom, p= 0.7 # P value: fit.diff$pvalue #> [1] 0.7415316  obs.exp.ratios <- fit.diff$obs/fit.diff$exp # Hazard ratio: obs.exp.ratios[1]/obs.exp.ratios[2] #> [1] 0.7814048  # Confidence interval obs.minus.exp <- fit.diff$obs[1]-fit.diff$exp[1] V <- fit.diff$var[1,1] # V <- obs.minus.exp^2 / fit.diff$chisq # equivalent calculation K <- obs.minus.exp/V log.lower <- K-1.96*sqrt(V) log.upper <- K+1.96*sqrt(V) ci <- exp(c(log.lower, log.upper)) ci #> [1]  0.04541889 14.02371866"},{"path":"https://martinlaw.github.io/abscessus/articles/Abscessus_analysis.html","id":"cox-ph","dir":"Articles","previous_headings":"Difference in mortality > Survival analysis","what":"Cox PH","title":"Abscessus_analysis","text":"Fitting Cox proportional hazards model also show effect, though plot , assumption proportional hazards appears hold.","code":"cox.no.covar <- coxph(Surv(time, status) ~ infected, data = dat) cox.no.covar #> Call: #> coxph(formula = Surv(time, status) ~ infected, data = dat) #>  #>                        coef exp(coef) se(coef)     z     p #> infectedNot infected 0.2468    1.2799   0.7502 0.329 0.742 #>  #> Likelihood ratio test=0.12  on 1 df, p=0.7341 #> n= 68, number of events= 18"},{"path":"https://martinlaw.github.io/abscessus/articles/Abscessus_analysis.html","id":"baseline-characteristics","dir":"Articles","previous_headings":"Difference in mortality","what":"Baseline characteristics","title":"Abscessus_analysis","text":"Using Wilcoxon rank-sum test continuous variables Fisher’s Exact Test categorical variables (due small group size)","code":"# Follow up: summary(dat$time) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>     1.0   508.2   741.0   725.0  1033.5  1225.0   wilcox.test(formula = age_at_tx ~ infected, data=dat) #>  #>  Wilcoxon rank sum test with continuity correction #>  #> data:  age_at_tx by infected #> W = 277, p-value = 0.8421 #> alternative hypothesis: true location shift is not equal to 0 tapply(dat$age_at_tx, dat$infected, summary) #> $Infected #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   46.00   50.00   54.00   54.56   60.00   64.00  #>  #> $`Not infected` #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   20.00   46.00   56.00   52.69   60.00   68.00  wilcox.test(formula = bmi_pre_tx ~ infected, data=dat) #>  #>  Wilcoxon rank sum test with continuity correction #>  #> data:  bmi_pre_tx by infected #> W = 262.5, p-value = 0.9639 #> alternative hypothesis: true location shift is not equal to 0 tapply(dat$bmi_pre_tx, dat$infected, summary) #> $Infected #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   20.00   22.30   23.50   24.38   24.40   35.20  #>  #> $`Not infected` #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   16.70   21.35   23.70   23.96   26.95   32.00  fisher.test(dat$infected, dat$gender_male_1) #>  #>  Fisher's Exact Test for Count Data #>  #> data:  dat$infected and dat$gender_male_1 #> p-value = 1 #> alternative hypothesis: true odds ratio is not equal to 1 #> 95 percent confidence interval: #>  0.1329911 4.7844602 #> sample estimates: #> odds ratio  #>  0.9060624 round(prop.table(table(dat$infected, dat$gender_male_1), margin=1), 2) #>                #>                   f    m #>   Infected     0.33 0.67 #>   Not infected 0.36 0.64  fisher.test(dat$infected, dat$donortype) #>  #>  Fisher's Exact Test for Count Data #>  #> data:  dat$infected and dat$donortype #> p-value = 0.6805 #> alternative hypothesis: true odds ratio is not equal to 1 #> 95 percent confidence interval: #>  0.1146778 4.3746267 #> sample estimates: #> odds ratio  #>  0.6269587 round(prop.table(table(dat$infected, dat$donortype), margin=1), 2) #>                #>                 DBD  DCD #>   Infected     0.67 0.33 #>   Not infected 0.76 0.24  fisher.test(dat$infected, dat$organ_1_single) #>  #>  Fisher's Exact Test for Count Data #>  #> data:  dat$infected and dat$organ_1_single #> p-value = 0.6742 #> alternative hypothesis: true odds ratio is not equal to 1 #> 95 percent confidence interval: #>  0.007758465 3.179263171 #> sample estimates: #> odds ratio  #>  0.3710222 round(prop.table(table(dat$infected, dat$organ_1_single), margin=1), 2) #>                #>                   1    2 #>   Infected     0.11 0.89 #>   Not infected 0.25 0.75  fisher.test(dat$infected, dat$gord_yes_1) #>  #>  Fisher's Exact Test for Count Data #>  #> data:  dat$infected and dat$gord_yes_1 #> p-value = 0.7266 #> alternative hypothesis: true odds ratio is not equal to 1 #> 95 percent confidence interval: #>  0.2792571 9.9053215 #> sample estimates: #> odds ratio  #>    1.46251 round(prop.table(table(dat$infected, dat$gord_yes_1), margin=1), 2) #>                #>                   0    1 #>   Infected     0.67 0.33 #>   Not infected 0.58 0.42  fisher.test(dat$infected, dat$immunosuppressed_pre_yes_1) #>  #>  Fisher's Exact Test for Count Data #>  #> data:  dat$infected and dat$immunosuppressed_pre_yes_1 #> p-value = 0.1898 #> alternative hypothesis: true odds ratio is not equal to 1 #> 95 percent confidence interval: #>  0.06273966 2.67446291 #> sample estimates: #> odds ratio  #>   0.366871 round(prop.table(table(dat$infected, dat$immunosuppressed_pre_yes_1), margin=1), 2) #>                #>                   0    1 #>   Infected     0.67 0.33 #>   Not infected 0.85 0.15  fisher.test(dat$infected, dat$PGD_yes_1) #>  #>  Fisher's Exact Test for Count Data #>  #> data:  dat$infected and dat$PGD_yes_1 #> p-value = 0.3361 #> alternative hypothesis: true odds ratio is not equal to 1 #> 95 percent confidence interval: #>  0.3804105       Inf #> sample estimates: #> odds ratio  #>        Inf round(prop.table(table(dat$infected, dat$PGD_yes_1), margin=1), 2) #>                #>                   0    1 #>   Infected     1.00 0.00 #>   Not infected 0.81 0.19"},{"path":"https://martinlaw.github.io/abscessus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://martinlaw.github.io/abscessus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2022). abscessus: Package (One Line, Title Case). R package version 0.0.0.9000, https://martinlaw.github.io/abscessus/.","code":"@Manual{,   title = {abscessus: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://martinlaw.github.io/abscessus/}, }"}]
